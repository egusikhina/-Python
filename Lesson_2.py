# 1. Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента. Использовать
# функцию type() для проверки типа. Элементы списка можно не запрашивать
# у пользователя, а указать явно, в программе.
# list1 = [23, 'g', False, 4.5, 56, 'f']
# i = 0
# for element in list1:
#     print(list1[i])
#     print(type(list1[i]))
#     i = i + 1

# 2. Для списка реализовать обмен значений соседних элементов, т.е.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().
# list1 = input('Введите элементы списка: ')
# list1 = list(list1.split())
# list2 = []
# i = 0
# a = len(list1)
# print(list1)
#
# if a % 2 == 0:
#     while i < a:
#         if (i % 2) == 0:
#             list2.insert(i+1, list1[i])
#         else:
#             list2.insert(i-1, list1[i])
#         i += 1
# else:
#     while i < (a - 1):
#         if (i % 2) == 0:
#             list2.insert(i + 1, list1[i])
#         else:
#             list2.insert(i - 1, list1[i])
#         i += 1
#     list2.insert(a - 1, list1[a - 1])
# print(list2)

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict.
# season = {1: 'зима', 2: 'зима', 3: 'весна', 4: 'весна', 5: 'весна', 6: 'лето',
#           7: 'лето',  8: 'лето', 9: 'осень', 10: 'осень', 11: 'осень', 12: 'зима'}
# print(season.keys())
# print(season.values())
# number = int(input('Введите число от 1 до 12: '))
# print(season.setdefault(number))

# winter = [1, 2, 12]
# spring = [3, 4, 5]
# summer = [6, 7, 8]
# autumn = [9, 10, 11]
# number = int(input('Введите число от 1 до 12: '))
# for el in winter:
#     if el == number:
#         print('зима')
# for el in spring:
#     if el == number:
#         print('весна')
# for el in summer:
#     if el == number:
#         print('лето')
# for el in autumn:
#     if el == number:
#         print('осень')

# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
# Если в слово длинное, выводить только первые 10 букв в слове.
# text = input('Введите строку: ')
# words = list(text.split())
# i = 1
# for word in words:
#     print(f'{i} {word[:10]}')
#     i +=1

# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий
# набор натуральных чисел. У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент
# с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].
# scores = [7, 5, 3, 3, 2]
# print(scores)
# while True:
#     points = int(input('Введите количество баллов: '))
#     if points <= scores[len(scores)-1]:
#         scores.insert(len(scores), points)
#         print(scores)
#     elif points > scores[len(scores)-1]:
#         i = 0
#         while not points > scores[i]:
#             i += 1
#             continue
#         scores.insert(i, points)
#     print(scores)

# 6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента —
# номер товара и словарь с параметрами (характеристиками товара: название, цена, количество,
# единица измерения). Структуру нужно сформировать программно, т.е. запрашивать все данные
# у пользователя.
# Пример готовой структуры:
# [
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ —
# характеристика товара, например название, а значение — список значений-характеристик,
# например список названий товаров.
# Пример:
# {
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }

i = 1
table = []
name_st = []
price_st = []
number_st = []
unit_st = []
while i < 4:
    name = input('Введите название товара: ')
    price = input('Введите его цену: ')
    number = int(input('Введите количество товара: '))
    unit = input('Введите единицу измерения товара: ')

    product_dict = {'название': name, 'цена': price, 'количество': number, 'ед.': unit}
    name_st.append(product_dict['название'])
    price_st.append(product_dict['цена'])
    number_st.append(product_dict['количество'])
    unit_st.append(product_dict['ед.'])

    product = (i, {'название': name, 'цена': price, 'количество': number, 'ед.': unit})
    table.append(product)

    i += 1

for t in table:
    print(t)
print(f'название {name_st}')
print(f'название {price_st}')
print(f'название {number_st}')
print(f'название {unit_st}')
